class Solution {
public:
    int dyp(int n,vector<int>&dp){
     /*   if(n<=1){
          return 1;
      }
        if(dp[n]>0){
            return dp[n];
        }
       return  dp[n]= help(n-1,dp) + help(n-2,dp);*/
        int ans1=0,ans2=0,ans=0;
        //base condition
        if(n==0){
            return 1;
        }
        if(dp[n]!=-1){
            return dp[n];
        }
        //first check n is not negative
        if(n-1>=0){
        ans1 = ans1 + dyp(n-1,dp);
        }
        //first check n is not negative
        if(n-2>=0){
        ans2 = ans2 + dyp(n-2,dp);
        }
        ans = ans1 + ans2;
        return dp[n] = ans;
    }
    int climbStairs(int n) {
      vector<int> dp(n+1,-1);
      return dyp(n,dp);
    }
};
